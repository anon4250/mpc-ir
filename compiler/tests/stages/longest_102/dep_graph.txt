Nodes:
    parameter Seq!0
    parameter N!0
    parameter Syms!0
    s0!1 = False
    max_len!1 = 0
    length!1 = 0
    for i!1 in range(0, N!0):
    s0!2 = Φ(s0!1, s0!3)
    max_len!2 = Φ(max_len!1, max_len!4)
    length!2 = Φ(length!1, length!5)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    s1!2 = (s0!2 and !1!2)
    !2!2 = (Seq!0[i!1] == Syms!0[1])
    !4!2 = (Seq!0[i!1] == Syms!0[0])
    !5!2 = (s0!2 and !4!2)
    s0!3 = (!2!2 or !5!2)
    !6!2 = (s1!2 or s0!3)
    length!4 = 0
    length!3 = (length!2 + 1)
    length!5 = MUX(!6!2, length!3, length!4)
    !7!2 = (max_len!2 < length!5)
    !8!2 = (s1!2 and !7!2)
    max_len!3 = length!5
    max_len!4 = MUX(!8!2, max_len!3, max_len!2)
    s0!2 = Φ(s0!1, s0!3)
    max_len!2 = Φ(max_len!1, max_len!4)
    length!2 = Φ(length!1, length!5)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    s1!2 = (s0!2 and !1!2)
    !2!2 = (Seq!0[i!1] == Syms!0[1])
    !4!2 = (Seq!0[i!1] == Syms!0[0])
    !5!2 = (s0!2 and !4!2)
    s0!3 = (!2!2 or !5!2)
    !6!2 = (s1!2 or s0!3)
    length!4 = 0
    length!3 = (length!2 + 1)
    length!5 = MUX(!6!2, length!3, length!4)
    !7!2 = (max_len!2 < length!5)
    !8!2 = (s1!2 and !7!2)
    max_len!3 = length!5
    max_len!4 = MUX(!8!2, max_len!3, max_len!2)
    return max_len!2
Forward edges:
    parameter Seq!0  →  parameter Seq!0
    parameter Seq!0  →  !1!2 = (Seq!0[i!1] == Syms!0[2])
    parameter Seq!0  →  !2!2 = (Seq!0[i!1] == Syms!0[1])
    parameter Seq!0  →  !4!2 = (Seq!0[i!1] == Syms!0[0])
    parameter N!0  →  parameter N!0
    parameter Syms!0  →  parameter Syms!0
    parameter Syms!0  →  !1!2 = (Seq!0[i!1] == Syms!0[2])
    parameter Syms!0  →  !2!2 = (Seq!0[i!1] == Syms!0[1])
    parameter Syms!0  →  !4!2 = (Seq!0[i!1] == Syms!0[0])
    s0!1 = False  →  s0!2 = Φ(s0!1, s0!3)
    max_len!1 = 0  →  max_len!2 = Φ(max_len!1, max_len!4)
    length!1 = 0  →  length!2 = Φ(length!1, length!5)
    for i!1 in range(0, N!0):
    s0!2 = Φ(s0!1, s0!3)
    max_len!2 = Φ(max_len!1, max_len!4)
    length!2 = Φ(length!1, length!5)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    s1!2 = (s0!2 and !1!2)
    !2!2 = (Seq!0[i!1] == Syms!0[1])
    !4!2 = (Seq!0[i!1] == Syms!0[0])
    !5!2 = (s0!2 and !4!2)
    s0!3 = (!2!2 or !5!2)
    !6!2 = (s1!2 or s0!3)
    length!4 = 0
    length!3 = (length!2 + 1)
    length!5 = MUX(!6!2, length!3, length!4)
    !7!2 = (max_len!2 < length!5)
    !8!2 = (s1!2 and !7!2)
    max_len!3 = length!5
    max_len!4 = MUX(!8!2, max_len!3, max_len!2)  →  !1!2 = (Seq!0[i!1] == Syms!0[2])
    for i!1 in range(0, N!0):
    s0!2 = Φ(s0!1, s0!3)
    max_len!2 = Φ(max_len!1, max_len!4)
    length!2 = Φ(length!1, length!5)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    s1!2 = (s0!2 and !1!2)
    !2!2 = (Seq!0[i!1] == Syms!0[1])
    !4!2 = (Seq!0[i!1] == Syms!0[0])
    !5!2 = (s0!2 and !4!2)
    s0!3 = (!2!2 or !5!2)
    !6!2 = (s1!2 or s0!3)
    length!4 = 0
    length!3 = (length!2 + 1)
    length!5 = MUX(!6!2, length!3, length!4)
    !7!2 = (max_len!2 < length!5)
    !8!2 = (s1!2 and !7!2)
    max_len!3 = length!5
    max_len!4 = MUX(!8!2, max_len!3, max_len!2)  →  !2!2 = (Seq!0[i!1] == Syms!0[1])
    for i!1 in range(0, N!0):
    s0!2 = Φ(s0!1, s0!3)
    max_len!2 = Φ(max_len!1, max_len!4)
    length!2 = Φ(length!1, length!5)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    s1!2 = (s0!2 and !1!2)
    !2!2 = (Seq!0[i!1] == Syms!0[1])
    !4!2 = (Seq!0[i!1] == Syms!0[0])
    !5!2 = (s0!2 and !4!2)
    s0!3 = (!2!2 or !5!2)
    !6!2 = (s1!2 or s0!3)
    length!4 = 0
    length!3 = (length!2 + 1)
    length!5 = MUX(!6!2, length!3, length!4)
    !7!2 = (max_len!2 < length!5)
    !8!2 = (s1!2 and !7!2)
    max_len!3 = length!5
    max_len!4 = MUX(!8!2, max_len!3, max_len!2)  →  !4!2 = (Seq!0[i!1] == Syms!0[0])
    s0!2 = Φ(s0!1, s0!3)  →  s1!2 = (s0!2 and !1!2)
    s0!2 = Φ(s0!1, s0!3)  →  !5!2 = (s0!2 and !4!2)
    max_len!2 = Φ(max_len!1, max_len!4)  →  !7!2 = (max_len!2 < length!5)
    max_len!2 = Φ(max_len!1, max_len!4)  →  max_len!4 = MUX(!8!2, max_len!3, max_len!2)
    max_len!2 = Φ(max_len!1, max_len!4)  →  return max_len!2
    length!2 = Φ(length!1, length!5)  →  length!3 = (length!2 + 1)
    !1!2 = (Seq!0[i!1] == Syms!0[2])  →  s1!2 = (s0!2 and !1!2)
    s1!2 = (s0!2 and !1!2)  →  !6!2 = (s1!2 or s0!3)
    s1!2 = (s0!2 and !1!2)  →  !8!2 = (s1!2 and !7!2)
    !2!2 = (Seq!0[i!1] == Syms!0[1])  →  s0!3 = (!2!2 or !5!2)
    !4!2 = (Seq!0[i!1] == Syms!0[0])  →  !5!2 = (s0!2 and !4!2)
    !5!2 = (s0!2 and !4!2)  →  s0!3 = (!2!2 or !5!2)
    s0!3 = (!2!2 or !5!2)  →  !6!2 = (s1!2 or s0!3)
    !6!2 = (s1!2 or s0!3)  →  length!5 = MUX(!6!2, length!3, length!4)
    length!4 = 0  →  length!5 = MUX(!6!2, length!3, length!4)
    length!3 = (length!2 + 1)  →  length!5 = MUX(!6!2, length!3, length!4)
    length!5 = MUX(!6!2, length!3, length!4)  →  !7!2 = (max_len!2 < length!5)
    length!5 = MUX(!6!2, length!3, length!4)  →  max_len!3 = length!5
    !7!2 = (max_len!2 < length!5)  →  !8!2 = (s1!2 and !7!2)
    !8!2 = (s1!2 and !7!2)  →  max_len!4 = MUX(!8!2, max_len!3, max_len!2)
    max_len!3 = length!5  →  max_len!4 = MUX(!8!2, max_len!3, max_len!2)
Back edges:
    s0!3 = (!2!2 or !5!2)  →  s0!2 = Φ(s0!1, s0!3)
    length!5 = MUX(!6!2, length!3, length!4)  →  length!2 = Φ(length!1, length!5)
    max_len!4 = MUX(!8!2, max_len!3, max_len!2)  →  max_len!2 = Φ(max_len!1, max_len!4)
