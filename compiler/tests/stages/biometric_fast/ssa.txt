Function biometric_fast(D!0: plaintext[int], N!0: plaintext[int], C!0: shared[list[int; ?]], C_sqr_sum!0: shared[int], two_C!0: shared[list[int; ?]], S!0: shared[list[int; ?]], S_sqr_sum!0: shared[list[int; ?]], differences!0: shared[list[int; ?]]) -> tuple[shared[int], shared[int]]:
Entry block: 0
Exit block: 9
Block 0:
    min_index!1 = 0
    jump
Block 1:
    min_index!2 = Φ(min_index!1, min_index!3)
    a_sqr_plus_b_sqr!1 = Φ(a_sqr_plus_b_sqr!0, a_sqr_plus_b_sqr!2)
    two_a_b!1 = Φ(two_a_b!0, two_a_b!3)
    tmp!1 = Φ(tmp!0, tmp!2)
    this_diff!1 = Φ(this_diff!0, this_diff!2)
    differences!1 = Φ(differences!0, differences!2)
    for i!1: plaintext[int] in range(0, N!0)
Block 2:
    a_sqr_plus_b_sqr!2 = (S_sqr_sum!0[i!1] + C_sqr_sum!0)
    two_a_b!2 = 0
    jump
Block 3:
    min_diff!1 = 99999
    jump
Block 4:
    two_a_b!3 = Φ(two_a_b!2, two_a_b!4)
    tmp!2 = Φ(tmp!1, tmp!3)
    for j!1: plaintext[int] in range(0, D!0)
Block 5:
    tmp!3 = (S!0[((i!1 * D!0) + j!1)] * two_C!0[j!1])
    two_a_b!4 = (two_a_b!3 + tmp!3)
    jump
Block 6:
    this_diff!2 = (a_sqr_plus_b_sqr!2 - two_a_b!3)
    differences!2 = Update(differences!1, i!1, this_diff!2)
    min_index!3 = 0
    jump
Block 7:
    min_index!4 = Φ(min_index!2, min_index!6)
    min_diff!2 = Φ(min_diff!1, min_diff!4)
    !1!1 = Φ(!1!0, !1!2)
    for i!2: plaintext[int] in range(0, N!0)
Block 8:
    !1!2 = (differences!1[i!2] < min_diff!2)
    conditional jump !1!2
Block 9:
    !2!1 = (min_diff!2, min_index!4)
    return !2!1
Block 10:
    jump
Block 11:
    min_diff!3 = differences!1[i!2]
    min_index!5 = i!2
    jump
Block 12:
    min_index!6 = Φ(min_index!4, min_index!5)
    min_diff!4 = Φ(min_diff!2, min_diff!3)
    (merge from conditional jump !1!2)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (3, 7, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 1, *) (7, 9, F) (7, 8, T) (8, 10, F) (8, 11, T) (10, 12, *) (11, 12, *) (12, 7, *)
