Function biometric_fast(D: plaintext[int], N: plaintext[int], C: shared[list[int; ?]], C_sqr_sum: shared[int], two_C: shared[list[int; ?]], S: shared[list[int; ?]], S_sqr_sum: shared[list[int; ?]], differences: shared[list[int; ?]]) -> tuple[shared[int], shared[int]]:
Entry block: 0
Exit block: 9
Block 0:
    min_index = 0
    jump
Block 1:
    for i: plaintext[int] in range(0, N)
Block 2:
    a_sqr_plus_b_sqr = (S_sqr_sum[i] + C_sqr_sum)
    two_a_b = 0
    jump
Block 3:
    min_diff = 99999
    jump
Block 4:
    for j: plaintext[int] in range(0, D)
Block 5:
    tmp = (S[((i * D) + j)] * two_C[j])
    two_a_b = (two_a_b + tmp)
    jump
Block 6:
    this_diff = (a_sqr_plus_b_sqr - two_a_b)
    differences = Update(differences, i, this_diff)
    min_index = 0
    jump
Block 7:
    for i: plaintext[int] in range(0, N)
Block 8:
    !1 = (differences[i] < min_diff)
    conditional jump !1
Block 9:
    !2 = (min_diff, min_index)
    return !2
Block 10:
    jump
Block 11:
    min_diff = differences[i]
    min_index = i
    jump
Block 12:
    (merge from conditional jump !1)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (3, 7, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 1, *) (7, 9, F) (7, 8, T) (8, 10, F) (8, 11, T) (10, 12, *) (11, 12, *) (12, 7, *)
