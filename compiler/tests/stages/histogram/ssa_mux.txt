Function histogram(A!0: shared[list[int; ?]], B!0: shared[list[int; ?]], N!0: plaintext[int], num_bins!0: plaintext[int], result!0: plaintext[list[int; ?]]) -> shared[list[int; ?]]:
Entry block: 0
Exit block: 3
Block 0:
    jump
Block 1:
    !1!1 = Φ(!1!0, !1!2)
    val!1 = Φ(val!0, val!2)
    result!1 = Φ(result!0, result!2)
    for i!1: plaintext[int] in range(0, num_bins!0)
Block 2:
    jump
Block 3:
    return result!1
Block 4:
    !1!2 = Φ(!1!1, !1!3)
    val!2 = Φ(val!1, val!5)
    result!2 = Φ(result!1, result!3)
    for j!1: plaintext[int] in range(0, N!0)
Block 5:
    !1!3 = (A!0[j!1] == i!1)
    conditional jump !1!3
Block 6:
    jump
Block 7:
    val!4 = result!2[i!1]
    jump
Block 8:
    val!3 = (result!2[i!1] + B!0[j!1])
    jump
Block 9:
    (merge from conditional jump !1!3)
    val!5 = MUX(!1!3, val!3, val!4)
    result!3 = Update(result!2, i!1, val!5)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 7, F) (5, 8, T) (6, 1, *) (7, 9, *) (8, 9, *) (9, 4, *)
