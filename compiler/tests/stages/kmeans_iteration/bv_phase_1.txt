def kmeans_iteration(data_x!0: shared[list[int; ?]], data_y!0: shared[list[int; ?]], cluster_x!0: shared[list[int; ?]], cluster_y!0: shared[list[int; ?]], OUTPUT_cluster_x!0: shared[list[int; ?]], OUTPUT_cluster_y!0: shared[list[int; ?]], len!0: plaintext[int], num_cluster!0: plaintext[int], bestMap!0: plaintext[list[int; ?]]) -> tuple[shared[list[int; ?]], shared[list[int; ?]]]:
    !5!0{I!1:LEN!0}[] = lift(bestMap!0, (i!1:len!0))
    for i!1 in range(0, len!0):
        bestMap!1{I!1:LEN!0}[] = Φ(!5!0{I!1:LEN!0}[], !6!0{I!1:LEN!0}[]) (targetless)
        best_dist!2 = 10000
        !7!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0))
        !8!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = lift(bestMap!1{I!1:LEN!0}[], (i!1:len!0, c!1:num_cluster!0))
        !9!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0))
        !10!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0))
        !11!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0))
        !12!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0))
        for c!1 in range(0, num_cluster!0):
            best_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = Φ(!7!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[], best_dist!5{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            bestMap!2{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = Φ(!8!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[], bestMap!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            x_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = (!9!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] - !10!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            x_sq!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = (x_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] * x_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            y_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = (!11!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] - !12!0{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            y_sq!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = (y_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] * y_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = (x_sq!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] + y_sq!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            val!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = bestMap!2{I!1:LEN!0, C!1:NUM_CLUSTER!0}[]
            !1!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = (dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] < best_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            best_dist!4{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[]
            val!4 = c!1
            best_dist!5{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = MUX(!1!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[], best_dist!4{I!1:LEN!0, C!1:NUM_CLUSTER!0}[], best_dist!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            val!5{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = MUX(!1!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[], val!4, val!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
            bestMap!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[] = VectorizedUpdate(bestMap!2{I!1:LEN!0, C!1:NUM_CLUSTER!0}[], [I!1, C!1], val!5{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
        !6!0{I!1:LEN!0}[] = drop_dim(bestMap!3{I!1:LEN!0, C!1:NUM_CLUSTER!0}[])
    !13!0{C!2:NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0))
    !14!0{C!2:NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0))
    for c!2 in range(0, num_cluster!0):
        OUTPUT_cluster_x!1{C!2:NUM_CLUSTER!0}[] = Φ(!13!0{C!2:NUM_CLUSTER!0}[], OUTPUT_cluster_x!2{C!2:NUM_CLUSTER!0}[]) (targetless)
        OUTPUT_cluster_y!1{C!2:NUM_CLUSTER!0}[] = Φ(!14!0{C!2:NUM_CLUSTER!0}[], OUTPUT_cluster_y!2{C!2:NUM_CLUSTER!0}[]) (targetless)
        val_x!2 = 0
        val_y!2 = 0
        count!2 = 0
        !15!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0))
        !16!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0))
        !17!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0))
        !18!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0))
        !19!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = lift(bestMap!1{}[i!2], (c!2:num_cluster!0, i!2:len!0))
        !20!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0))
        !21!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0))
        for i!2 in range(0, len!0):
            val_x!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = Φ(!15!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], val_x!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
            val_y!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = Φ(!16!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], val_y!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
            count!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = Φ(!17!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], count!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
            !2!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = (!18!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] == !19!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
            val_x!4{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = (val_x!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] + !20!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
            val_y!4{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = (val_y!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] + !21!0{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
            count!4{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = (count!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] + 1)
            val_x!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = MUX(!2!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], val_x!4{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], val_x!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
            val_y!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = MUX(!2!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], val_y!4{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], val_y!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
            count!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[] = MUX(!2!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], count!4{C!2:NUM_CLUSTER!0, I!2:LEN!0}[], count!3{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
        !22!0{C!2:NUM_CLUSTER!0}[] = drop_dim(count!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
        !3!2{C!2:NUM_CLUSTER!0}[] = (!22!0{C!2:NUM_CLUSTER!0}[] > 0)
        !23!0{C!2:NUM_CLUSTER!0}[] = drop_dim(val_x!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
        !24!0{C!2:NUM_CLUSTER!0}[] = drop_dim(count!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
        val_x!6{C!2:NUM_CLUSTER!0}[] = (!23!0{C!2:NUM_CLUSTER!0}[] / !24!0{C!2:NUM_CLUSTER!0}[])
        !25!0{C!2:NUM_CLUSTER!0}[] = drop_dim(val_y!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
        !26!0{C!2:NUM_CLUSTER!0}[] = drop_dim(count!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
        val_y!6{C!2:NUM_CLUSTER!0}[] = (!25!0{C!2:NUM_CLUSTER!0}[] / !26!0{C!2:NUM_CLUSTER!0}[])
        !27!0{C!2:NUM_CLUSTER!0}[] = drop_dim(val_x!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
        val_x!7{C!2:NUM_CLUSTER!0}[] = MUX(!3!2{C!2:NUM_CLUSTER!0}[], val_x!6{C!2:NUM_CLUSTER!0}[], !27!0{C!2:NUM_CLUSTER!0}[])
        !28!0{C!2:NUM_CLUSTER!0}[] = drop_dim(val_y!5{C!2:NUM_CLUSTER!0, I!2:LEN!0}[])
        val_y!7{C!2:NUM_CLUSTER!0}[] = MUX(!3!2{C!2:NUM_CLUSTER!0}[], val_y!6{C!2:NUM_CLUSTER!0}[], !28!0{C!2:NUM_CLUSTER!0}[])
        OUTPUT_cluster_x!2{C!2:NUM_CLUSTER!0}[] = VectorizedUpdate(OUTPUT_cluster_x!1{C!2:NUM_CLUSTER!0}[], [C!2], val_x!7{C!2:NUM_CLUSTER!0}[])
        OUTPUT_cluster_y!2{C!2:NUM_CLUSTER!0}[] = VectorizedUpdate(OUTPUT_cluster_y!1{C!2:NUM_CLUSTER!0}[], [C!2], val_y!7{C!2:NUM_CLUSTER!0}[])
    !4!1 = (OUTPUT_cluster_x!1, OUTPUT_cluster_y!1)
    return !4!1
