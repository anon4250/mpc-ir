Nodes:
    parameter Seq!0
    parameter N!0
    parameter Syms!0
    s1!1 = False
    s2!1 = False
    c!1 = 0
    for i!1 in range(0, N!0):
    s1!2 = Φ(s1!1, s1!3)
    s2!2 = Φ(s2!1, s2!3)
    c!2 = Φ(c!1, c!4)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    !2!2 = (s2!2 or s1!2)
    !3!2 = (!1!2 and !2!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!3!2, c!3, c!2)
    !4!2 = (Seq!0[i!1] == Syms!0[1])
    !5!2 = (s1!2 or s2!2)
    s2!3 = (!4!2 and !5!2)
    s1!3 = (Seq!0[i!1] == Syms!0[0])
    s1!2 = Φ(s1!1, s1!3)
    s2!2 = Φ(s2!1, s2!3)
    c!2 = Φ(c!1, c!4)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    !2!2 = (s2!2 or s1!2)
    !3!2 = (!1!2 and !2!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!3!2, c!3, c!2)
    !4!2 = (Seq!0[i!1] == Syms!0[1])
    !5!2 = (s1!2 or s2!2)
    s2!3 = (!4!2 and !5!2)
    s1!3 = (Seq!0[i!1] == Syms!0[0])
    return c!2
Forward edges:
    parameter Seq!0  →  parameter Seq!0
    parameter Seq!0  →  !1!2 = (Seq!0[i!1] == Syms!0[2])
    parameter Seq!0  →  !4!2 = (Seq!0[i!1] == Syms!0[1])
    parameter Seq!0  →  s1!3 = (Seq!0[i!1] == Syms!0[0])
    parameter N!0  →  parameter N!0
    parameter Syms!0  →  parameter Syms!0
    parameter Syms!0  →  !1!2 = (Seq!0[i!1] == Syms!0[2])
    parameter Syms!0  →  !4!2 = (Seq!0[i!1] == Syms!0[1])
    parameter Syms!0  →  s1!3 = (Seq!0[i!1] == Syms!0[0])
    s1!1 = False  →  s1!2 = Φ(s1!1, s1!3)
    s2!1 = False  →  s2!2 = Φ(s2!1, s2!3)
    c!1 = 0  →  c!2 = Φ(c!1, c!4)
    for i!1 in range(0, N!0):
    s1!2 = Φ(s1!1, s1!3)
    s2!2 = Φ(s2!1, s2!3)
    c!2 = Φ(c!1, c!4)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    !2!2 = (s2!2 or s1!2)
    !3!2 = (!1!2 and !2!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!3!2, c!3, c!2)
    !4!2 = (Seq!0[i!1] == Syms!0[1])
    !5!2 = (s1!2 or s2!2)
    s2!3 = (!4!2 and !5!2)
    s1!3 = (Seq!0[i!1] == Syms!0[0])  →  !1!2 = (Seq!0[i!1] == Syms!0[2])
    for i!1 in range(0, N!0):
    s1!2 = Φ(s1!1, s1!3)
    s2!2 = Φ(s2!1, s2!3)
    c!2 = Φ(c!1, c!4)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    !2!2 = (s2!2 or s1!2)
    !3!2 = (!1!2 and !2!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!3!2, c!3, c!2)
    !4!2 = (Seq!0[i!1] == Syms!0[1])
    !5!2 = (s1!2 or s2!2)
    s2!3 = (!4!2 and !5!2)
    s1!3 = (Seq!0[i!1] == Syms!0[0])  →  !4!2 = (Seq!0[i!1] == Syms!0[1])
    for i!1 in range(0, N!0):
    s1!2 = Φ(s1!1, s1!3)
    s2!2 = Φ(s2!1, s2!3)
    c!2 = Φ(c!1, c!4)
    !1!2 = (Seq!0[i!1] == Syms!0[2])
    !2!2 = (s2!2 or s1!2)
    !3!2 = (!1!2 and !2!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!3!2, c!3, c!2)
    !4!2 = (Seq!0[i!1] == Syms!0[1])
    !5!2 = (s1!2 or s2!2)
    s2!3 = (!4!2 and !5!2)
    s1!3 = (Seq!0[i!1] == Syms!0[0])  →  s1!3 = (Seq!0[i!1] == Syms!0[0])
    s1!2 = Φ(s1!1, s1!3)  →  !2!2 = (s2!2 or s1!2)
    s1!2 = Φ(s1!1, s1!3)  →  !5!2 = (s1!2 or s2!2)
    s2!2 = Φ(s2!1, s2!3)  →  !2!2 = (s2!2 or s1!2)
    s2!2 = Φ(s2!1, s2!3)  →  !5!2 = (s1!2 or s2!2)
    c!2 = Φ(c!1, c!4)  →  c!3 = (c!2 + 1)
    c!2 = Φ(c!1, c!4)  →  c!4 = MUX(!3!2, c!3, c!2)
    c!2 = Φ(c!1, c!4)  →  return c!2
    !1!2 = (Seq!0[i!1] == Syms!0[2])  →  !3!2 = (!1!2 and !2!2)
    !2!2 = (s2!2 or s1!2)  →  !3!2 = (!1!2 and !2!2)
    !3!2 = (!1!2 and !2!2)  →  c!4 = MUX(!3!2, c!3, c!2)
    c!3 = (c!2 + 1)  →  c!4 = MUX(!3!2, c!3, c!2)
    !4!2 = (Seq!0[i!1] == Syms!0[1])  →  s2!3 = (!4!2 and !5!2)
    !5!2 = (s1!2 or s2!2)  →  s2!3 = (!4!2 and !5!2)
Back edges:
    c!4 = MUX(!3!2, c!3, c!2)  →  c!2 = Φ(c!1, c!4)
    s2!3 = (!4!2 and !5!2)  →  s2!2 = Φ(s2!1, s2!3)
    s1!3 = (Seq!0[i!1] == Syms!0[0])  →  s1!2 = Φ(s1!1, s1!3)
