Nodes:
    parameter X_coords!0
    parameter Y_coords!0
    parameter N!0
    parameter result_X!0
    parameter result_Y!0
    for i!1 in range(0, N!0):
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    is_hull!2 = True
    p1_X!2 = X_coords!0[i!1]
    p1_Y!2 = Y_coords!0[i!1]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    for j!1 in range(0, N!0):
        is_hull!3 = Φ(is_hull!2, is_hull!5)
        p2_X!3 = X_coords!0[j!1]
        p2_Y!3 = Y_coords!0[j!1]
        !4!3 = (p1_X!2 > p2_X!3)
        !5!3 = (p1_Y!2 < p2_Y!3)
        !6!3 = (!4!3 and !5!3)
        is_hull!4 = False
        is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    val_X!2 = result_X!1[i!1]
    val_Y!2 = result_Y!1[i!1]
    val_X!3 = p1_X!2
    val_Y!3 = p1_Y!2
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    is_hull!2 = True
    p1_X!2 = X_coords!0[i!1]
    p1_Y!2 = Y_coords!0[i!1]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    for j!1 in range(0, N!0):
    is_hull!3 = Φ(is_hull!2, is_hull!5)
    p2_X!3 = X_coords!0[j!1]
    p2_Y!3 = Y_coords!0[j!1]
    !4!3 = (p1_X!2 > p2_X!3)
    !5!3 = (p1_Y!2 < p2_Y!3)
    !6!3 = (!4!3 and !5!3)
    is_hull!4 = False
    is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!3 = Φ(is_hull!2, is_hull!5)
    p2_X!3 = X_coords!0[j!1]
    p2_Y!3 = Y_coords!0[j!1]
    !4!3 = (p1_X!2 > p2_X!3)
    !5!3 = (p1_Y!2 < p2_Y!3)
    !6!3 = (!4!3 and !5!3)
    is_hull!4 = False
    is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    val_X!2 = result_X!1[i!1]
    val_Y!2 = result_Y!1[i!1]
    val_X!3 = p1_X!2
    val_Y!3 = p1_Y!2
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)
    !7!1 = (result_X!1, result_Y!1)
    return !7!1
Forward edges:
    parameter X_coords!0  →  parameter X_coords!0
    parameter X_coords!0  →  p1_X!2 = X_coords!0[i!1]
    parameter X_coords!0  →  p2_X!3 = X_coords!0[j!1]
    parameter Y_coords!0  →  parameter Y_coords!0
    parameter Y_coords!0  →  p1_Y!2 = Y_coords!0[i!1]
    parameter Y_coords!0  →  p2_Y!3 = Y_coords!0[j!1]
    parameter N!0  →  parameter N!0
    parameter result_X!0  →  parameter result_X!0
    parameter result_X!0  →  result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    parameter result_Y!0  →  parameter result_Y!0
    parameter result_Y!0  →  result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    for i!1 in range(0, N!0):
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    is_hull!2 = True
    p1_X!2 = X_coords!0[i!1]
    p1_Y!2 = Y_coords!0[i!1]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    for j!1 in range(0, N!0):
        is_hull!3 = Φ(is_hull!2, is_hull!5)
        p2_X!3 = X_coords!0[j!1]
        p2_Y!3 = Y_coords!0[j!1]
        !4!3 = (p1_X!2 > p2_X!3)
        !5!3 = (p1_Y!2 < p2_Y!3)
        !6!3 = (!4!3 and !5!3)
        is_hull!4 = False
        is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    val_X!2 = result_X!1[i!1]
    val_Y!2 = result_Y!1[i!1]
    val_X!3 = p1_X!2
    val_Y!3 = p1_Y!2
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)  →  p1_X!2 = X_coords!0[i!1]
    for i!1 in range(0, N!0):
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    is_hull!2 = True
    p1_X!2 = X_coords!0[i!1]
    p1_Y!2 = Y_coords!0[i!1]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    for j!1 in range(0, N!0):
        is_hull!3 = Φ(is_hull!2, is_hull!5)
        p2_X!3 = X_coords!0[j!1]
        p2_Y!3 = Y_coords!0[j!1]
        !4!3 = (p1_X!2 > p2_X!3)
        !5!3 = (p1_Y!2 < p2_Y!3)
        !6!3 = (!4!3 and !5!3)
        is_hull!4 = False
        is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    val_X!2 = result_X!1[i!1]
    val_Y!2 = result_Y!1[i!1]
    val_X!3 = p1_X!2
    val_Y!3 = p1_Y!2
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)  →  p1_Y!2 = Y_coords!0[i!1]
    for i!1 in range(0, N!0):
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    is_hull!2 = True
    p1_X!2 = X_coords!0[i!1]
    p1_Y!2 = Y_coords!0[i!1]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    for j!1 in range(0, N!0):
        is_hull!3 = Φ(is_hull!2, is_hull!5)
        p2_X!3 = X_coords!0[j!1]
        p2_Y!3 = Y_coords!0[j!1]
        !4!3 = (p1_X!2 > p2_X!3)
        !5!3 = (p1_Y!2 < p2_Y!3)
        !6!3 = (!4!3 and !5!3)
        is_hull!4 = False
        is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    val_X!2 = result_X!1[i!1]
    val_Y!2 = result_Y!1[i!1]
    val_X!3 = p1_X!2
    val_Y!3 = p1_Y!2
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)  →  val_X!2 = result_X!1[i!1]
    for i!1 in range(0, N!0):
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    is_hull!2 = True
    p1_X!2 = X_coords!0[i!1]
    p1_Y!2 = Y_coords!0[i!1]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    for j!1 in range(0, N!0):
        is_hull!3 = Φ(is_hull!2, is_hull!5)
        p2_X!3 = X_coords!0[j!1]
        p2_Y!3 = Y_coords!0[j!1]
        !4!3 = (p1_X!2 > p2_X!3)
        !5!3 = (p1_Y!2 < p2_Y!3)
        !6!3 = (!4!3 and !5!3)
        is_hull!4 = False
        is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    val_X!2 = result_X!1[i!1]
    val_Y!2 = result_Y!1[i!1]
    val_X!3 = p1_X!2
    val_Y!3 = p1_Y!2
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)  →  val_Y!2 = result_Y!1[i!1]
    for i!1 in range(0, N!0):
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    is_hull!2 = True
    p1_X!2 = X_coords!0[i!1]
    p1_Y!2 = Y_coords!0[i!1]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    for j!1 in range(0, N!0):
        is_hull!3 = Φ(is_hull!2, is_hull!5)
        p2_X!3 = X_coords!0[j!1]
        p2_Y!3 = Y_coords!0[j!1]
        !4!3 = (p1_X!2 > p2_X!3)
        !5!3 = (p1_Y!2 < p2_Y!3)
        !6!3 = (!4!3 and !5!3)
        is_hull!4 = False
        is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    val_X!2 = result_X!1[i!1]
    val_Y!2 = result_Y!1[i!1]
    val_X!3 = p1_X!2
    val_Y!3 = p1_Y!2
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)  →  result_X!2 = Update(result_X!1, i!1, val_X!4)
    for i!1 in range(0, N!0):
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
    is_hull!2 = True
    p1_X!2 = X_coords!0[i!1]
    p1_Y!2 = Y_coords!0[i!1]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    for j!1 in range(0, N!0):
        is_hull!3 = Φ(is_hull!2, is_hull!5)
        p2_X!3 = X_coords!0[j!1]
        p2_Y!3 = Y_coords!0[j!1]
        !4!3 = (p1_X!2 > p2_X!3)
        !5!3 = (p1_Y!2 < p2_Y!3)
        !6!3 = (!4!3 and !5!3)
        is_hull!4 = False
        is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    val_X!2 = result_X!1[i!1]
    val_Y!2 = result_Y!1[i!1]
    val_X!3 = p1_X!2
    val_Y!3 = p1_Y!2
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)  →  result_Y!2 = Update(result_Y!1, i!1, val_Y!4)
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)  →  val_X!2 = result_X!1[i!1]
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)  →  result_X!2 = Update(result_X!1, i!1, val_X!4)
    result_X!1 = Φ(result_X!0, result_X!2) (targetless)  →  !7!1 = (result_X!1, result_Y!1)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)  →  val_Y!2 = result_Y!1[i!1]
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)  →  result_Y!2 = Update(result_Y!1, i!1, val_Y!4)
    result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)  →  !7!1 = (result_X!1, result_Y!1)
    is_hull!2 = True  →  is_hull!3 = Φ(is_hull!2, is_hull!5)
    is_hull!2 = True  →  is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    p1_X!2 = X_coords!0[i!1]  →  !1!2 = (p1_X!2 <= 0)
    p1_X!2 = X_coords!0[i!1]  →  !4!3 = (p1_X!2 > p2_X!3)
    p1_X!2 = X_coords!0[i!1]  →  val_X!3 = p1_X!2
    p1_Y!2 = Y_coords!0[i!1]  →  !2!2 = (p1_Y!2 >= 0)
    p1_Y!2 = Y_coords!0[i!1]  →  !5!3 = (p1_Y!2 < p2_Y!3)
    p1_Y!2 = Y_coords!0[i!1]  →  val_Y!3 = p1_Y!2
    !1!2 = (p1_X!2 <= 0)  →  !3!2 = (!1!2 and !2!2)
    !2!2 = (p1_Y!2 >= 0)  →  !3!2 = (!1!2 and !2!2)
    !3!2 = (!1!2 and !2!2)  →  is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    for j!1 in range(0, N!0):
    is_hull!3 = Φ(is_hull!2, is_hull!5)
    p2_X!3 = X_coords!0[j!1]
    p2_Y!3 = Y_coords!0[j!1]
    !4!3 = (p1_X!2 > p2_X!3)
    !5!3 = (p1_Y!2 < p2_Y!3)
    !6!3 = (!4!3 and !5!3)
    is_hull!4 = False
    is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)  →  p2_X!3 = X_coords!0[j!1]
    for j!1 in range(0, N!0):
    is_hull!3 = Φ(is_hull!2, is_hull!5)
    p2_X!3 = X_coords!0[j!1]
    p2_Y!3 = Y_coords!0[j!1]
    !4!3 = (p1_X!2 > p2_X!3)
    !5!3 = (p1_Y!2 < p2_Y!3)
    !6!3 = (!4!3 and !5!3)
    is_hull!4 = False
    is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)  →  p2_Y!3 = Y_coords!0[j!1]
    is_hull!3 = Φ(is_hull!2, is_hull!5)  →  is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!3 = Φ(is_hull!2, is_hull!5)  →  is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)
    p2_X!3 = X_coords!0[j!1]  →  !4!3 = (p1_X!2 > p2_X!3)
    p2_Y!3 = Y_coords!0[j!1]  →  !5!3 = (p1_Y!2 < p2_Y!3)
    !4!3 = (p1_X!2 > p2_X!3)  →  !6!3 = (!4!3 and !5!3)
    !5!3 = (p1_Y!2 < p2_Y!3)  →  !6!3 = (!4!3 and !5!3)
    !6!3 = (!4!3 and !5!3)  →  is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!4 = False  →  is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)  →  val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    is_hull!6 = MUX(!3!2, is_hull!3, is_hull!2)  →  val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    val_X!2 = result_X!1[i!1]  →  val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!2 = result_Y!1[i!1]  →  val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    val_X!3 = p1_X!2  →  val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)
    val_Y!3 = p1_Y!2  →  val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)
    val_X!4 = MUX(is_hull!6, val_X!3, val_X!2)  →  result_X!2 = Update(result_X!1, i!1, val_X!4)
    val_Y!4 = MUX(is_hull!6, val_Y!3, val_Y!2)  →  result_Y!2 = Update(result_Y!1, i!1, val_Y!4)
    !7!1 = (result_X!1, result_Y!1)  →  return !7!1
Back edges:
    is_hull!5 = MUX(!6!3, is_hull!4, is_hull!3)  →  is_hull!3 = Φ(is_hull!2, is_hull!5)
    result_X!2 = Update(result_X!1, i!1, val_X!4)  →  result_X!1 = Φ(result_X!0, result_X!2) (targetless)
    result_Y!2 = Update(result_Y!1, i!1, val_Y!4)  →  result_Y!1 = Φ(result_Y!0, result_Y!2) (targetless)
