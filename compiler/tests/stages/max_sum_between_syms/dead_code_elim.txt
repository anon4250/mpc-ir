Function max_sum_between_syms(Seq!0: shared[list[int; ?]], N!0: plaintext[int], Sym!0: shared[int]) -> shared[int]:
Entry block: 0
Exit block: 3
Block 0:
    max_sum!1 = 0
    current_sum!1 = 0
    jump
Block 1:
    max_sum!2 = Φ(max_sum!1, max_sum!4)
    current_sum!2 = Φ(current_sum!1, current_sum!5)
    for i!1: plaintext[int] in range(0, N!0)
Block 2:
    !1!2 = (Seq!0[i!1] == Sym!0)
    !2!2 = not !1!2
    conditional jump !2!2
Block 3:
    return max_sum!2
Block 4:
    current_sum!4 = 0
    jump
Block 5:
    current_sum!3 = (current_sum!2 + Seq!0[i!1])
    jump
Block 6:
    (merge from conditional jump !2!2)
    current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)
    !3!2 = (current_sum!5 > max_sum!2)
    conditional jump !3!2
Block 7:
    jump
Block 8:
    max_sum!3 = current_sum!5
    jump
Block 9:
    (merge from conditional jump !3!2)
    max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, F) (2, 5, T) (4, 6, *) (5, 6, *) (6, 7, F) (6, 8, T) (7, 9, *) (8, 9, *) (9, 1, *)
