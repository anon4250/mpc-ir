Function biometric(C!0: shared[list[int; ?]], D!0: plaintext[int], S!0: shared[list[int; ?]], N!0: plaintext[int]) -> tuple[shared[int], shared[int]]:
Entry block: 0
Exit block: 3
Block 0:
    min_sum!1 = 10000
    min_index!1 = 0
    jump
Block 1:
    min_sum!2 = Φ(min_sum!1, min_sum!4)
    min_index!2 = Φ(min_index!1, min_index!4)
    for i!1: plaintext[int] in range(0, N!0)
Block 2:
    sum!2 = 0
    jump
Block 3:
    !2!1 = (min_sum!2, min_index!2)
    return !2!1
Block 4:
    sum!3 = Φ(sum!2, sum!4)
    for j!1: plaintext[int] in range(0, D!0)
Block 5:
    d!3 = (S!0[((i!1 * D!0) + j!1)] - C!0[j!1])
    p!3 = (d!3 * d!3)
    sum!4 = (sum!3 + p!3)
    jump
Block 6:
    !1!2 = (sum!3 < min_sum!2)
    conditional jump !1!2
Block 7:
    jump
Block 8:
    min_sum!3 = sum!3
    min_index!3 = i!1
    jump
Block 9:
    (merge from conditional jump !1!2)
    min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)
    min_index!4 = MUX(!1!2, min_index!3, min_index!2)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 7, F) (6, 8, T) (7, 9, *) (8, 9, *) (9, 1, *)
