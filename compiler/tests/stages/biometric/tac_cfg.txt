Function biometric(C: shared[list[int; ?]], D: plaintext[int], S: shared[list[int; ?]], N: plaintext[int]) -> tuple[shared[int], shared[int]]:
Entry block: 0
Exit block: 3
Block 0:
    min_sum = 10000
    min_index = 0
    jump
Block 1:
    for i: plaintext[int] in range(0, N)
Block 2:
    sum = 0
    jump
Block 3:
    !2 = (min_sum, min_index)
    return !2
Block 4:
    for j: plaintext[int] in range(0, D)
Block 5:
    d = (S[((i * D) + j)] - C[j])
    p = (d * d)
    sum = (sum + p)
    jump
Block 6:
    !1 = (sum < min_sum)
    conditional jump !1
Block 7:
    jump
Block 8:
    min_sum = sum
    min_index = i
    jump
Block 9:
    (merge from conditional jump !1)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 7, F) (6, 8, T) (7, 9, *) (8, 9, *) (9, 1, *)
